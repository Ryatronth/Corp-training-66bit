frontend:
  url: ${FRONTEND_URL}

file_server:
  url: ${FILESTORAGE_URL}
  api_header: FILE-API-KEY
  api_key: ${API_KEY}

spring:
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  servlet:
    multipart:
      max-request-size: 500MB
      max-file-size: 500MB

  sql:
    init:
      mode: always

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          batch_size: 15
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
    open-in-view: false

  security:
    oauth2:
      client:
        registration:
          github:
            clientId: ${GITHUB_CLIENT_ID}
            clientSecret: ${GITHUB_CLIENT_SECRET}
            redirect-uri: ${HOST}/login/oauth2/code/github
            authorization-grant-type: authorization_code
            scope:
              - read:user
              - user:email
            client-name: GitHub
          gitlab:
            clientId: ${GITLAB_CLIENT_ID}
            clientSecret: ${GITLAB_CLIENT_SECRET}
            redirect-uri: ${HOST}/login/oauth2/code/gitlab
            authorization-grant-type: authorization_code
            scope:
              - read_user
              - openid
              - profile
              - email
            client-name: GitLab
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id
          gitlab:
            authorization-uri: https://git.66bit.ru/oauth/authorize
            token-uri: https://git.66bit.ru/oauth/token
            user-info-uri: https://git.66bit.ru/oauth/userinfo
            jwk-set-uri: https://git.66bit.ru/oauth/discovery/keys
            user-name-attribute: nickname

      default_success_url: "${frontend.url}/redirect"